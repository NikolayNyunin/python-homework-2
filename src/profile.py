from src.db import set_profile

from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

import re

profile_router = Router()


class ProfileSetup(StatesGroup):
    weight = State()
    height = State()
    age = State()
    activity_time = State()
    city = State()
    calorie_target = State()


@profile_router.message(Command('set_profile'))
async def set_profile_command(message: Message, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""

    await state.set_state(ProfileSetup.weight)
    await message.answer('üí™ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–µ—Å (–≤ –∫–≥):')


@profile_router.message(ProfileSetup.weight)
async def set_weight(message: Message, state: FSMContext):
    """–ó–∞–¥–∞–Ω–∏–µ –≤–µ—Å–∞."""

    # –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–µ—Å–∞
    try:
        weight = float(message.text)
    except ValueError:
        await message.answer('‚ùå –í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–µ—Å–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
    else:
        if weight < 30 or weight > 200:
            await message.answer('‚ùå –í–≤–µ–¥—ë–Ω–Ω—ã–π –≤–µ—Å –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ (30, 200) –∫–≥')
        else:
            await state.update_data(weight=weight)
            await state.set_state(ProfileSetup.height)
            await message.answer('üîù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ä–æ—Å—Ç (–≤ —Å–º):')


@profile_router.message(ProfileSetup.height)
async def set_height(message: Message, state: FSMContext):
    """–ó–∞–¥–∞–Ω–∏–µ —Ä–æ—Å—Ç–∞."""

    # –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–æ—Å—Ç–∞
    try:
        height = float(message.text)
    except ValueError:
        await message.answer('‚ùå –í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
    else:
        if height < 140 or height > 220:
            await message.answer('‚ùå –í–≤–µ–¥—ë–Ω–Ω—ã–π —Ä–æ—Å—Ç –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ (140, 220) —Å–º')
        else:
            await state.update_data(height=height)
            await state.set_state(ProfileSetup.age)
            await message.answer('üßì –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç:')


@profile_router.message(ProfileSetup.age)
async def set_age(message: Message, state: FSMContext):
    """–ó–∞–¥–∞–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞."""

    # –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–æ–∑—Ä–∞—Å—Ç–∞
    try:
        age = float(message.text)
    except ValueError:
        await message.answer('‚ùå –í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–æ–∑—Ä–∞—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
    else:
        if age < 12 or age > 100:
            await message.answer('‚ùå –í–≤–µ–¥—ë–Ω–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ (12, 100) –ª–µ—Ç')
        else:
            await state.update_data(age=age)
            await state.set_state(ProfileSetup.activity_time)
            await message.answer('üèÉ –°–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —É –≤–∞—Å –≤ –¥–µ–Ω—å?')


@profile_router.message(ProfileSetup.activity_time)
async def set_activity_time(message: Message, state: FSMContext):
    """–ó–∞–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏."""

    # –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    try:
        activity_time = int(message.text)
    except ValueError:
        await message.answer('‚ùå –í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
    else:
        if activity_time < 0 or activity_time > 1440:
            await message.answer('‚ùå –í–≤–µ–¥—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ (0, 1440) –º–∏–Ω—É—Ç')
        else:
            await state.update_data(activity_time=activity_time)
            await state.set_state(ProfileSetup.city)
            await message.answer('üèôÔ∏è –í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å? (–Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ-–∞–Ω–≥–ª–∏–π—Å–∫–∏)')


@profile_router.message(ProfileSetup.city)
async def set_city(message: Message, state: FSMContext):
    """–ó–∞–¥–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è."""

    city = message.text
    if not bool(re.fullmatch(r'[A-Z][a-z]+(?:[\s-][A-Z][a-z]+)*', city)):
        await message.answer('‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞')
    else:
        await state.update_data(city=city)
        await state.set_state(ProfileSetup.calorie_target)
        await message.answer('üå≠ –ö–∞–∫–∞—è —É –≤–∞—Å —Ü–µ–ª—å –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –∫–∞–ª–æ—Ä–∏–π (–≤ –∫–∫–∞–ª)? (–¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ 0)')


@profile_router.message(ProfileSetup.calorie_target)
async def set_calorie_target(message: Message, state: FSMContext):
    """–ó–∞–¥–∞–Ω–∏–µ —Ü–µ–ª–∏ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –∫–∞–ª–æ—Ä–∏–π (–≤ –∫–∫–∞–ª)."""

    # –í–∞–ª–∏–¥–∞—Ü–∏—è —Ü–µ–ª–∏ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –∫–∞–ª–æ—Ä–∏–π
    try:
        calorie_target = int(message.text)
    except ValueError:
        await message.answer('‚ùå –í–≤–µ–¥–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Ü–µ–ª–∏ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –∫–∞–ª–æ—Ä–∏–π, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É')
    else:
        if calorie_target < 0 or calorie_target > 10000:
            await message.answer('‚ùå –í–≤–µ–¥—ë–Ω–Ω–∞—è —Ü–µ–ª—å –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –∫–∞–ª–æ—Ä–∏–π –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ (0, 10000) –∫–∫–∞–ª')
        else:
            await state.update_data(calorie_target=calorie_target)
            data = await state.get_data()
            await set_profile(message.from_user.id, **data)
            await message.answer('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
            await state.clear()
